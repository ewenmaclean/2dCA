{ (*header*)

open Lexing
open Nameparser
let keyword_al = [
  ("spec",SPEC)
]
}
let digit = ['0'-'9']
let letter = ['?' 'A'-'Z' '_' 'a'-'z']
let alphanum = digit | letter
let ident = letter alphanum*
let newline = ('\010' | '\013' | "\013\010")

rule token = parse
  | [' ' '\n' '\t'] { token lexbuf }
  | "%%"            {comment lexbuf;token lexbuf}
  | "spec"         {spec lexbuf} 
  | eof             { EOF }
  | _ {token lexbuf}
and
comment = parse
  | "%%" {comment lexbuf}
  | newline {}
  | eof {}
  | _ {comment lexbuf}
and
spec = parse
   | "spec" {SPEC} 
   | '=' {token lexbuf} 
   | ident {let s = Lexing.lexeme lexbuf in
                          try List.assoc s keyword_al
                          with Not_found -> IDENT(s)}
   | _ {spec lexbuf}

{}

