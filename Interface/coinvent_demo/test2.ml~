let win = GWindow.window ~show:true () in
let cols = new GTree.column_list in
let name_col = cols#add Gobject.Data.string in
let value_col = cols#add Gobject.Data.string in
let domain_col = cols#add (Gobject.Data.gobject_by_name "GtkTreeModel") in
let name_renderer = GTree.cell_renderer_text [], ["text", name_col] in
let string_col = (new GTree.column_list)#add Gobject.Data.string in
let value_renderer =
  GTree.cell_renderer_combo
    [ `VISIBLE true;
      `TEXT_COLUMN string_col;
      `HAS_ENTRY false;
      `EDITABLE true; ]
in
let view_name_col = GTree.view_column ~renderer:name_renderer () in
let view_value_col = GTree.view_column ~renderer:(value_renderer, []) () in
let _ =
  view_value_col#add_attribute value_renderer "model" domain_col;
  view_value_col#add_attribute value_renderer "text" value_col;
in

let list_store = GTree.list_store cols in
let model = (list_store :> GTree.model) in

let view = GTree.view ~model ~packing:win#add ~show:true () in
let _ = view#append_column view_name_col in
let _ = view#append_column view_value_col in

let change_val i p (ls:GTree.list_store) = 
  let arr = GTree.Path.get_indices p in
  let i2 = arr.(0) in 
  (print_endline (string_of_int i2));();
  ls#set ~row:i ~column:value_col "SET"
in
ignore(value_renderer#connect#changed ~callback:(fun tp iter -> change_val iter tp list_store));

let append (list_store: GTree.list_store) n v d =
  let d, _ = GTree.store_of_list Gobject.Data.string d in
  let iter = list_store#append () in
  list_store#set ~row:iter ~column:name_col n;
  list_store#set ~row:iter ~column:value_col v;
  list_store#set ~row:iter ~column:domain_col d#as_model;
in



let _ =
  append list_store "foo" "0" ["0";"1";"2"];
  append list_store "bar" "1" ["1";"2";"3"];
  append list_store "baz" "2" ["2";"3";"4"];

in

GMain.Main.main ()
